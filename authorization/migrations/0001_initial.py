# Generated by Django 3.0.2 on 2020-01-20 09:56

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uid', models.CharField(max_length=100, null=True, unique=True)),
                ('name', models.CharField(max_length=100, null=True, unique=True)),
                ('real_name', models.CharField(max_length=20, null=True)),
                ('nickname', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=70)),
                ('gender', models.IntegerField(null=True)),
                ('birth', models.IntegerField(null=True)),
                ('phone', models.CharField(max_length=14, null=True, validators=[django.core.validators.RegexValidator(message='Phone number is invalid.', regex='\\d{3}[-]?\\d{4}[-]?\\d{4}')], verbose_name='phone number')),
                ('company', models.CharField(max_length=20, null=True)),
                ('department', models.CharField(max_length=20, null=True)),
                ('is_student', models.BooleanField(default=True)),
                ('is_certified', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('yami', models.IntegerField(default=0)),
                ('push_on', models.BooleanField(default=True)),
                ('chat_on', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('firebase_token', models.CharField(max_length=1000, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
